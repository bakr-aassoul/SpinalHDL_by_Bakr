# Einleitung

## Ziele dieser Dokumentation
Ziel dieser Dokumentation ist es, eine Einführung in SpinalHDL zu geben und die wichtigsten Grundlagen zu erklären.  
Dazu werden Praxisbeispiele vorgestellt, die den gesamten Entwicklungsprozess abdecken.  
Dazu gehören die Komponentenbeschreibung, die Simulation und schließlich die Generierung von Verilog- oder VHDL-Code.  
Neben diesem kleinen Projektbeispiel wird auch ein Beispiel zum komplexerem Design beschrieben.  
In unserem Fall ist dies der **VexRiscv-Prozessor**.

## Motivation

SpinalHDL ist eine moderne HDL (Hardwarebeschreibungssprache), die im Jahr 2014 eingeführt wurde und in Scala implementiert ist. 
Sie bietet die Möglichkeit, digitale Schaltungen zu entwerfen. 
Danach können diese als Verilog oder VHDL-Code generiert werden, der einsatzbereit und mit FPGA sowie ASIC-Toolchains kompatibel ist.  
Das Hauptziel von SpinalHDL ist es, die Entwicklung digitaler Schaltung einfacher, produktiver und vor allem zuverlässiger zu machen.  
Im Gegensatz zu alten, traditionellen HDLs wie VHDL oder Verilog, die fehleranfällig und schwerfällig sind, bietet SpinalHDL eine moderne Syntax.  
Damit können Entwickler Schaltungen klar, modular und wiederverwendbar beschreiben.

Durch die Integration bewährter Prinzipien aus der Softwareentwicklung wie Unit Tests, parametrisierbare Module und IDE Unterstützung entsteht ein Workflow, 
der sowohl präzise als auch effizient ist.  
Gleichzeitig bleibt SpinalHDL voll kompatibel mit FPGA und ASIC Toolchains, da automatisch Verilog oder VHDL Code generiert wird.

**Kurz gesagt** : SpinalHDL verbindet moderne Methoden der Softwareentwicklung mit der Verlässlichkeit klassischer Hardwarebeschreibung.

